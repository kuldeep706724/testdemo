# .github/workflows/enforce-checklist.yml
name: Enforce Checklist

on:
  pull_request_target:
    types: [opened, synchronize]

jobs:
  enforce-checklist:
    runs-on: ubuntu-latest

    steps:
      - name: Check for Required Checklist
        id: checklist
        run: |
          # Define the required checklist items
          required_items=("Are your changes following SOLID principles?" "Are there any erroneous console logs, debuggers or leftover code in your changes?" "Walk away, take a break, re-read what you filled out above does it make sense if you were coming in cold? What extra content could you provide?")
          
          # Read the PR description
          pr_description=$(jq -r .pull_request.body $GITHUB_EVENT_PATH)
          
          # Check if all required items are checked in the PR description
          invalid_items=false
          for item in "${required_items[@]}"; do
            if [[ ! "$pr_description" =~ "- [x] $item" ]]; then
              invalid_items=true
              echo "Unchecked checklist item: $item"
            fi
          done
          
          # Output the result
          echo "::set-output name=invalidItems::$invalid_items"

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set Check Status
        if: steps.checklist.outputs.invalidItems == 'true'
        run: |
          # Set the status check to failed
          echo "Checklist validation failed. Please complete all checklist items before merging the pull request."
          echo "::set-output name=status::failure"
        continue-on-error: true

  finalize:
    needs: enforce-checklist
    runs-on: ubuntu-latest
    steps:
      - name: Finalize Check Status
        if: needs.enforce-checklist.outputs.status != 'failure'
        run: |
          # Set the status check to successful if the checklist is completed
          echo "::set-output name=status::success"
        continue-on-error: true

      - name: Update Check Status
        if: always()
        uses: actions/github-script@v6
        with:
          check_name: 'Checklist'
          status: ${{ needs.enforce-checklist.outputs.status }}
          conclusion: ${{ needs.enforce-checklist.outputs.status }}
          output: ${{ needs.enforce-checklist.outputs.status == 'success' && '{"title":"Checklist Validation","summary":"All checklist items are checked."}' || '{"title":"Checklist Validation","summary":"Please complete all checklist items before merging the pull request."}' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
